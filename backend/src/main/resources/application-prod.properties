# Spring application info
spring.application.name=SpringCart Backend (prod)

# Server
server.port=${PORT:8080}
server.forward-headers-strategy=framework
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css

# PostgreSQL DataSource (use environment variables in production)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/springcart}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP connection pool tuning (adjust as needed for your infra)
spring.datasource.hikari.pool-name=SpringCartHikariCP
spring.datasource.hikari.maximum-pool-size=${SPRING_DATASOURCE_MAX_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${SPRING_DATASOURCE_MIN_IDLE:2}
spring.datasource.hikari.idle-timeout=${SPRING_DATASOURCE_IDLE_TIMEOUT:600000}   # 10 minutes
spring.datasource.hikari.connection-timeout=${SPRING_DATASOURCE_CONNECTION_TIMEOUT:30000} # 30 seconds

# JPA/Hibernate
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# Optional default schema (uncomment if you use a custom schema)
# spring.jpa.properties.hibernate.default_schema=${DB_SCHEMA:public}

# SQL initialization (disabled in prod; use migrations like Flyway/Liquibase)
spring.sql.init.mode=never

# Logging
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=INFO

# Management/Actuator (optional; restrict in production)
management.endpoints.web.exposure.include=health,info
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true
